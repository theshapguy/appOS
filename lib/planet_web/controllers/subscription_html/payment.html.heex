<section class="bg-white border border-gray-50 rounded-sm shadow-sm mt-4 p-8">
  <h2 class="text-2xl text-center tracking-tight font-extrabold text-gray-900 dark:text-white">
    Simple Pricing. No Complicated Tiers.
  </h2>

  <div class="text-center text-md text-gray-600 mt-4 max-w-xl mx-auto">
    Built by a solo developer who gets it. Just the features you need, zero bloat. Choose the plan that matches your workflow and growth.
  </div>

  <div class="text-center">
    <.link
      navigate={~p"/plans#plan-feature-table"}
      target="_blank"
      class="inline-flex justify-center items-center mt-4 gap-2 text-sm text-neutral-500 hover:text-blue-500 select-none"
    >
      <div>View full comparision</div>
      <.icon name="hero-scale" class="h-5 w-5" />
    </.link>
  </div>
</section>

<form class="mt-12" id="plans-form">
  <%!-- <.form :let={_f} for={%{}}> --%>
  <%= for {item, _plan_index} <- Enum.with_index(@subscription_plans) do %>
    <div class="mb-8">
      <fieldset>
        <div class="text-lg leading-6 font-semibold">{item.name}</div>
        <div class="text-sm leading-4 mb-3 text-neutral-600">{item.description}</div>

        <%= for {variation, _variation_index} <- Enum.with_index(item.variations) do %>
          <div class={[
            "px-2 py-1 rounded-md border mb-2 select-none hover:border-blue-400 transition",
            if(variation.id == "lifetime",
              do: "gradient-bg",
              else: "gradient-hover"
            )
          ]}>
            <label class="flex items-center space-x-2 relative p-4 cursor-pointer">
              <% price_id = get_in(variation, [:processors, @processor, :price_id]) %>
              <% product_id = get_in(variation, [:processors, @processor, :product_id]) %>

              <input
                type="radio"
                name="price_id"
                value={price_id}
                data-price-id={price_id}
                data-product-id={product_id}
              />

              <div class="pl-2 flex flex-1 justify-between">
                <div class="flex flex-col justify-center">
                  <h3 class="font-semibold text-gray-900 text-[1.1rem]">
                    <span :if={variation.id != "lifetime"} class="capitalize mt-0.5">
                      {variation.billing_frequency}
                    </span>
                    <span :if={variation.id == "lifetime"} class="capitalize mt-0.5">
                      One Time Payment
                    </span>
                  </h3>
                  <p class="text-sm text-gray-500">
                    {humanize_payment_term(variation.billing_frequency)}
                  </p>
                </div>

                <div class="text-right flex flex-col justify-center">
                  <div class="flex items-center gap-2 justify-end">
                    <span
                      :if={variation.savings}
                      class="bg-blue-100 text-blue-800 text-xs font-medium px-2 py-1 rounded"
                    >
                      Save {variation.savings.percentage}%
                    </span>
                    <div class="text-2xl font-bold text-gray-900">${variation.price}</div>
                  </div>
                  <p :if={variation.savings} class="text-sm text-gray-500">
                    ${variation.savings.monthly_equivalent} per month
                  </p>
                </div>

                <div class="hidden items-center justify-between gap-x-2">
                  <%= if Map.get(variation, :savings, nil) != nil do %>
                    <div class="inline-block bg-blue-100 text-blue-800 text-xs font-medium px-2 py-0.5 rounded-md">
                      Save {variation.savings.percentage}%
                    </div>
                  <% end %>

                  <div class="flex items-baseline space-x-2 text-gray-900 font-semibold text-xl">
                    <span>${variation.price}</span><span class="text-sm font-normal text-gray-500">/ <%= variation.billing_frequency %></span>
                  </div>
                </div>
              </div>
            </label>
          </div>
        <% end %>
      </fieldset>
    </div>
  <% end %>

  <div :if={@lifetime_plans_only?} class="flex justify-center mt-4 w-full text-sm text-gray-400">
    When you upgrade to the lifetime plan, I‚Äôll manually cancel your current subscription. If a subscription charge takes places before I can cancel it, I‚Äôll refund the subscription charge.
  </div>

  <div class="flex justify-center mt-12 w-full" id="subscrible-paddle-button">
    <button
      type="submit"
      class="flex items-center justify-center gap-2 w-full text-center bg-brand hover:bg-rouge-400 px-8 py-4 rounded-md text-white font-semibold cursor-pointer outline outline-blue-400 hover:bg-blue-600 hover:outline-blue-600"
    >
      <span class="block flex-1">Upgrade</span>
    </button>
  </div>

  <div
    id="progress-indicator"
    class="opacity-0 transition-opacity ease-in-out duration-700  mt-4 h-1.5 mx-2 bg-blue-100 overflow-hidden"
  >
    <div class="progress w-full h-full bg-brand left-right"></div>
  </div>

  <div
    id="progress-indicator-status"
    class="opacity-0 transition-opacity ease-in-out duration-700 text-sm text-red-500 text-center cursor-default"
  >
    Error redirecting to payment page, please refresh and try again.
  </div>
  <%!-- </form> --%>
</form>

<div class="mt-2 text-center text-sm text-gray-500">
  <p>Powered by {@processor_humanized}</p>
  <p :if={@vat_included? == false} class="text-xs text-gray-400 mt-2">
    Prices exclude VAT and local sales tax.
    These will be added at checkout depending on your location.
    Sorry, blame the taxman! ü§∑‚Äç‚ôÇÔ∏è
  </p>
</div>

<%!-- JS Code --%>
<script :if={@processor == :creem || @processor == :stripe}>
  const form = document.getElementById('plans-form');

  // Form submission event listener
  form.addEventListener('submit', function(event) {
      // Prevent the default form submission
      // console.log("Submit Listener");
      event.preventDefault();

      // Get the selected radio input
      const selectedRadio = form.querySelector('input[name="price_id"]:checked');

      // Get data values from the selected radio input
      const product_id = selectedRadio.getAttribute('data-product-id');
      const price_id = selectedRadio.getAttribute('data-price-id');

      var formData = {
          price_id: price_id,
          processor: '<%= @processor %>'
          // other data recieved from session data
      }

      showProgressIndicator()

      fetch('<%= ~p"/formdata-api/checkout-session" %>', {
        method: "POST",
        credentials: 'include',
        headers: {
          "Content-Type": "application/json"
        },
        //body: urlEncodedData
         body: JSON.stringify(formData)
      })
      .then(response => response.json())
      .then(data => {
        if (data.checkout_url) {
          window.location.href = data.checkout_url;
        }else{
          hideProgressIndicator()
        }          
      })
      .catch(error => {
          console.error("Error", error);
          hideProgressIndicator()
      });

  });

  function hideProgressIndicator() {
      // Make the progress indicator invisible
      let progressIndicator = document.getElementById('progress-indicator');
      progressIndicator.classList.add('opacity-0');
      progressIndicator.classList.remove('opacity-100');
      

      let progressIndicatorStatus = document.getElementById('progress-indicator-status');
      progressIndicatorStatus.classList.add('opacity-100');
      progressIndicatorStatus.classList.remove('opacity-0');

  }

    function showProgressIndicator() {
      // Make the progress indicator visible
      let progressIndicator = document.getElementById('progress-indicator');
      
      progressIndicator.classList.remove('opacity-0');
      progressIndicator.classList.add('opacity-100');

      let progressIndicatorStatus = document.getElementById('progress-indicator-status');
      progressIndicatorStatus.classList.remove('opacity-100');
      progressIndicatorStatus.classList.add('opacity-0');
      

  }
</script>

<script :if={@processor == :paddle} src="https://cdn.paddle.com/paddle/v2/paddle.js">
</script>
<script :if={@processor == :paddle}>
  const urlParams = new URLSearchParams(window.location.search);
  const isLifetime = urlParams.get('lifetime') === 'yes';

  <%= if @payment_sandbox? do %>
      Paddle.Environment.set('sandbox'); 
  <% end %>

  Paddle.Initialize({
      token: '<%= Application.fetch_env!(:planet, :paddle) |> Keyword.fetch!(:client_key) %>', // replace with a client-side token
      pwCustomer: {
          email: '<%= @current_user.email %>'
      },
      eventCallback: function(data) {
          // console.log(data.name);
          if (data.name == "checkout.completed") {
              // console.log(data);

              let redirectUrl = '<%= raw(@success_redirect_url) %>'
              let redirectUrlWithTransactionId = redirectUrl.replace("{TRANSACTION_ID}", data.data.transaction_id);

              window.location.replace(redirectUrlWithTransactionId);

          }
      }

  });

  const form = document.getElementById('plans-form');

  // Form submission event listener
  form.addEventListener('submit', function(event) {
      // Prevent the default form submission
      // console.log("Submit Listener");
      event.preventDefault();

      // Get the selected radio input
      const selectedRadio = form.querySelector('input[name="price_id"]:checked');

      // Get data values from the selected radio input
      const product_id = selectedRadio.getAttribute('data-product-id');
      const price_id = selectedRadio.getAttribute('data-price-id');

      var item = {
          price_id: price_id,
          quantity: 1
      }

      openCheckout(product_id, price_id, [item]);

  });

  function openCheckout(product_id, price_id, itemsList) {

      Paddle.Checkout.open({
          customer: {
              email: '<%= @current_user.email %>',
          },
          settings: {
              allowLogout: false,
              displayMode: "overlay",
              variant: "multi-page",
              // frameTarget: "checkout-container-paddle",
              frameInitialHeight: "800",
              frameStyle: "width: 100%; min-width: 312px; max-width: 600px; background-color: transparent; border: none;",
              // moved to listeners
              //successUrl: "paddle_redirect_url"
          },
          items: itemsList,
          customData: {
              organization_id: '<%= @current_user.organization.id %>',
              user_id: '<%= @current_user.id %>',
              // email: '<%= @current_user.email %>',
              product_id: product_id,
              price_id: price_id
          }
      });

      return false;

  }

  if (isLifetime) {
      // console.log('Lifetime parameter is set to yes');
      form.requestSubmit();
  }
</script>

<script>
  <%!-- TODO --%>
  <%!-- Check Tests: Failing --%>
  <%!-- Select the first plan and check the radio button  --%>
  document.addEventListener('DOMContentLoaded', function() {
    const priceInputs = document.querySelectorAll('input[name="price_id"]');
    if (priceInputs.length > 0) {
      priceInputs[0].checked = true;
    }
  });
</script>
